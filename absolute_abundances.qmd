---
title: "Absolute Abundances"
author: "Bailey JÃ¸rgensen"
format: html
editor: visual
---

```{r}
# Load libraries
librarian::shelf(tidyverse, janitor, sf, terra, tmap, knitr, kableExtra, here)
```



# Read in all the data for the WITHIN MPAS calculations 

```{r}
# Create dirs
rds.dir <- "/capstone/marinebiomaps/data/rds-files"
boundary.dir <- "/capstone/marinebiomaps/data/MPA_boundaries"

# Read in biota data, filter columns, calculate area, drop unclassified, and drop geometry 
ncsr_biota_simple <- readRDS(file.path(rds.dir, "ncsr_biota.rds")) |> 
  select(c(pmep_zone, cmecs_bc_category, cmecs_bc_name, area_ha, geometry, study_regi, shortname, fullname, type, state)) |> 
  filter(cmecs_bc_category != "Unclassified") |> 
  st_transform(ncsr_biota_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry()

nccsr_biota_simple <- readRDS(file.path(rds.dir, "nccsr_biota.rds")) |> 
  select(c(pmep_zone, cmecs_bc_category, cmecs_bc_name, area_ha, geometry, study_regi, shortname, fullname, type, state)) |> 
  filter(cmecs_bc_category != "Unclassified") |> 
  st_transform(nccsr_biota_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry()

ccsr_biota_simple <- readRDS(file.path(rds.dir, "ccsr_biota.rds")) |> 
  select(c(pmep_zone, cmecs_bc_category, cmecs_bc_name, area_ha, geometry, study_regi, shortname, fullname, type, state)) |> 
  filter(cmecs_bc_category != "Unclassified") |> 
  st_transform(ccsr_biota_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry()

scsr_biota_simple <- readRDS(file.path(rds.dir, "scsr_biota.rds")) |> 
  select(c(pmep_zone, cmecs_bc_category, cmecs_bc_name, area_ha, geometry, study_regi, shortname, fullname, type, state)) |> 
  filter(cmecs_bc_category != "Unclassified") |> 
  st_transform(scsr_biota_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry()



# Read in all substrate data, filter columns, remove unclassified and calculate area
ncsr_substrate_simple <- readRDS(file.path(rds.dir, "ncsr_substrate.rds")) |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, shortname, fullname, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  st_transform(ncsr_substrate_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry() 

nccsr_substrate_simple <- readRDS(file.path(rds.dir, "nccsr_substrate.rds")) |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, shortname, fullname, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  st_transform(nccsr_substrate_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry() 

ccsr_substrate_simple <- readRDS(file.path(rds.dir, "ccsr_substrate.rds")) |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, shortname, fullname, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  st_transform(ccsr_substrate_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry() 

scsr_substrate_simple <- readRDS(file.path(rds.dir, "scsr_substrate.rds")) |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, shortname, fullname, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  st_transform(scsr_substrate_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry() 



# Read in all substrate data, filter columns, remove unclassified and calculate area - DFS FOR DEPTHS
ncsr_depths_simple <- readRDS(file.path(rds.dir, "ncsr_substrate.rds")) |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, shortname, fullname, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  st_transform(ncsr_substrate_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry() |> 
    mutate(pmep_zone_detail = case_when(
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), State Waters"  ~ "Depth Zone 6",
    pmep_zone_detail == "Outside PMEP Scope (>-200m) or International Waters" ~ "Depth Zone 8",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), Federal"               ~ "Depth Zone 5",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), State Waters"         ~ "Depth Zone 2",
    pmep_zone_detail == "Landward Zone"                                       ~ "Depth Zone 0",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), State Waters"          ~ "Depth Zone 4",
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), Federal"       ~ "Depth Zone 7",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), Federal"              ~ "Depth Zone 3"
  )) |> 
  filter(!pmep_zone_detail %in% c("Depth Zone 3", "Depth Zone 5", "Depth Zone 7"))

nccsr_depths_simple <- readRDS(file.path(rds.dir, "nccsr_substrate.rds")) |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, shortname, fullname, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  st_transform(nccsr_substrate_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry() |> 
    mutate(pmep_zone_detail = case_when(
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), State Waters"  ~ "Depth Zone 6",
    pmep_zone_detail == "Outside PMEP Scope (>-200m) or International Waters" ~ "Depth Zone 8",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), Federal"               ~ "Depth Zone 5",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), State Waters"         ~ "Depth Zone 2",
    pmep_zone_detail == "Landward Zone"                                       ~ "Depth Zone 0",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), State Waters"          ~ "Depth Zone 4",
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), Federal"       ~ "Depth Zone 7",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), Federal"              ~ "Depth Zone 3"
  )) |> 
  filter(!pmep_zone_detail %in% c("Depth Zone 3", "Depth Zone 5", "Depth Zone 7"))

ccsr_depths_simple <- readRDS(file.path(rds.dir, "ccsr_substrate.rds")) |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, shortname, fullname, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  st_transform(ccsr_substrate_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry() |> 
    mutate(pmep_zone_detail = case_when(
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), State Waters"  ~ "Depth Zone 6",
    pmep_zone_detail == "Outside PMEP Scope (>-200m) or International Waters" ~ "Depth Zone 8",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), Federal"               ~ "Depth Zone 5",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), State Waters"         ~ "Depth Zone 2",
    pmep_zone_detail == "Landward Zone"                                       ~ "Depth Zone 0",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), State Waters"          ~ "Depth Zone 4",
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), Federal"       ~ "Depth Zone 7",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), Federal"              ~ "Depth Zone 3"
  )) |> 
  filter(!pmep_zone_detail %in% c("Depth Zone 3", "Depth Zone 5", "Depth Zone 7"))

scsr_depths_simple <- readRDS(file.path(rds.dir, "scsr_substrate.rds")) |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, shortname, fullname, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  st_transform(scsr_substrate_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry() |> 
    mutate(pmep_zone_detail = case_when(
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), State Waters"  ~ "Depth Zone 6",
    pmep_zone_detail == "Outside PMEP Scope (>-200m) or International Waters" ~ "Depth Zone 8",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), Federal"               ~ "Depth Zone 5",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), State Waters"         ~ "Depth Zone 2",
    pmep_zone_detail == "Landward Zone"                                       ~ "Depth Zone 0",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), State Waters"          ~ "Depth Zone 4",
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), Federal"       ~ "Depth Zone 7",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), Federal"              ~ "Depth Zone 3"
  )) |> 
  filter(!pmep_zone_detail %in% c("Depth Zone 3", "Depth Zone 5", "Depth Zone 7"))



# Now the MPA boundaries file - for the WITHIN MPAs absolute abundance analysis
all_mpas <- sf::st_read(file.path(boundary.dir, "California_Marine_Protected_Areas_[ds582].shp")) |> 
  clean_names() |> 
  st_transform(all_mpas, crs = 32610) |> 
  st_make_valid() |> 
  rename(hectares_mpa = hectares) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000))

ncsr_mpas <- all_mpas |> 
  st_transform(ncsr_mpas, crs = 32610) |> 
  filter(study_regi == "NCSR") |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry()

nccsr_mpas <- all_mpas |> 
  filter(study_regi == "NCCSR") |> 
  st_transform(nccsr_mpas, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry()

ccsr_mpas <- all_mpas |> 
  filter(study_regi == "CCSR") |> 
  st_transform(ccsr_mpas, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry()

scsr_mpas <- all_mpas |> 
  filter(study_regi == "SCSR") |>
  st_transform(scsr_mpas, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry()

```


# Now read in all the data for the ALL STATEWATERS calculations

```{r}
# Read in biota data, filter columns, calculate area, drop unclassified, and drop geometry 
ncsr_biota_fullregion_simple <- readRDS(file.path(rds.dir, "ncsr_biota_fullregion.rds")) |> 
  select(c(pmep_zone, cmecs_bc_category, cmecs_bc_name, area_ha, geometry, study_regi, type, state)) |> 
  filter(cmecs_bc_category != "Unclassified") |> 
  st_transform(ncsr_biota_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry()

nccsr_biota_fullregion_simple <- readRDS(file.path(rds.dir, "nccsr_biota_fullregion.rds")) |> 
  select(c(pmep_zone, cmecs_bc_category, cmecs_bc_name, area_ha, geometry, study_regi, type, state)) |> 
  filter(cmecs_bc_category != "Unclassified") |> 
  st_transform(nccsr_biota_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry()

ccsr_biota_fullregion_simple <- readRDS(file.path(rds.dir, "ccsr_biota_fullregion.rds")) |> 
  select(c(pmep_zone, cmecs_bc_category, cmecs_bc_name, area_ha, geometry, study_regi, type, state)) |> 
  filter(cmecs_bc_category != "Unclassified") |> 
  st_transform(ccsr_biota_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry()

scsr_biota_fullregion_simple <- readRDS(file.path(rds.dir, "scsr_biota_fullregion.rds")) |> 
  select(c(pmep_zone, cmecs_bc_category, cmecs_bc_name, area_ha, geometry, study_regi, type, state)) |> 
  filter(cmecs_bc_category != "Unclassified") |> 
  st_transform(scsr_biota_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry()



# Read in all substrate data, filter columns, remove unclassified and calculate area
ncsr_substrate_fullregion_simple <- readRDS(file.path(rds.dir, "ncsr_substrate_fullregion.rds")) |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  st_transform(ncsr_substrate_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry() 

nccsr_substrate_fullregion_simple <- readRDS(file.path(rds.dir, "nccsr_substrate_fullregion.rds")) |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  st_transform(nccsr_substrate_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry() 

ccsr_substrate_fullregion_simple <- readRDS(file.path(rds.dir, "ccsr_substrate_fullregion.rds")) |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  st_transform(ccsr_substrate_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry() 

scsr_substrate_fullregion_simple <- readRDS(file.path(rds.dir, "scsr_substrate_fullregion.rds")) |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  st_transform(scsr_substrate_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry() 



# Read in all substrate data, filter columns, remove unclassified and calculate area - DFS FOR DEPTHS
ncsr_depths_fullregion_simple <- readRDS(file.path(rds.dir, "ncsr_substrate_fullregion.rds")) |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  st_transform(ncsr_substrate_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry() |> 
    mutate(pmep_zone_detail = case_when(
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), State Waters"  ~ "Depth Zone 6",
    pmep_zone_detail == "Outside PMEP Scope (>-200m) or International Waters" ~ "Depth Zone 8",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), Federal"               ~ "Depth Zone 5",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), State Waters"         ~ "Depth Zone 2",
    pmep_zone_detail == "Landward Zone"                                       ~ "Depth Zone 0",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), State Waters"          ~ "Depth Zone 4",
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), Federal"       ~ "Depth Zone 7",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), Federal"              ~ "Depth Zone 3"
  )) |> 
  filter(!pmep_zone_detail %in% c("Depth Zone 3", "Depth Zone 5", "Depth Zone 7"))

nccsr_depths_fullregion_simple <- readRDS(file.path(rds.dir, "nccsr_substrate_fullregion.rds")) |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  st_transform(nccsr_substrate_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry() |> 
    mutate(pmep_zone_detail = case_when(
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), State Waters"  ~ "Depth Zone 6",
    pmep_zone_detail == "Outside PMEP Scope (>-200m) or International Waters" ~ "Depth Zone 8",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), Federal"               ~ "Depth Zone 5",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), State Waters"         ~ "Depth Zone 2",
    pmep_zone_detail == "Landward Zone"                                       ~ "Depth Zone 0",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), State Waters"          ~ "Depth Zone 4",
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), Federal"       ~ "Depth Zone 7",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), Federal"              ~ "Depth Zone 3"
  )) |> 
  filter(!pmep_zone_detail %in% c("Depth Zone 3", "Depth Zone 5", "Depth Zone 7"))

ccsr_depths_fullregion_simple <- readRDS(file.path(rds.dir, "ccsr_substrate_fullregion.rds")) |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  st_transform(ccsr_substrate_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry() |> 
    mutate(pmep_zone_detail = case_when(
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), State Waters"  ~ "Depth Zone 6",
    pmep_zone_detail == "Outside PMEP Scope (>-200m) or International Waters" ~ "Depth Zone 8",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), Federal"               ~ "Depth Zone 5",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), State Waters"         ~ "Depth Zone 2",
    pmep_zone_detail == "Landward Zone"                                       ~ "Depth Zone 0",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), State Waters"          ~ "Depth Zone 4",
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), Federal"       ~ "Depth Zone 7",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), Federal"              ~ "Depth Zone 3"
  )) |> 
  filter(!pmep_zone_detail %in% c("Depth Zone 3", "Depth Zone 5", "Depth Zone 7"))

scsr_depths_fullregion_simple <- readRDS(file.path(rds.dir, "scsr_substrate_fullregion.rds")) |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  st_transform(scsr_substrate_simple, crs = 32610) |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry() |> 
    mutate(pmep_zone_detail = case_when(
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), State Waters"  ~ "Depth Zone 6",
    pmep_zone_detail == "Outside PMEP Scope (>-200m) or International Waters" ~ "Depth Zone 8",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), Federal"               ~ "Depth Zone 5",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), State Waters"         ~ "Depth Zone 2",
    pmep_zone_detail == "Landward Zone"                                       ~ "Depth Zone 0",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), State Waters"          ~ "Depth Zone 4",
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), Federal"       ~ "Depth Zone 7",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), Federal"              ~ "Depth Zone 3"
  )) |> 
  filter(!pmep_zone_detail %in% c("Depth Zone 3", "Depth Zone 5", "Depth Zone 7"))



sr_boundary.dir <- "/capstone/marinebiomaps/data/MLPA_Study_Regions"

ncsr_boundary <- sf::st_read(file.path(sr_boundary.dir, "Marine_Life_Protection_Act_Study_Regions_-_R7_-_CDFW_[ds3178].shp")) |> 
  clean_names() |> 
  st_transform(crs = 32610) |> 
  st_make_valid() |> 
  filter(study_regi == "NCSR") |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry()

nccsr_boundary <- sf::st_read(file.path(sr_boundary.dir, "Marine_Life_Protection_Act_Study_Regions_-_R7_-_CDFW_[ds3178].shp")) |> 
  clean_names() |> 
  st_transform(crs = 32610) |> 
  st_make_valid() |> 
  filter(study_regi == "NCCSR") |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry()

ccsr_boundary <- sf::st_read(file.path(sr_boundary.dir, "Marine_Life_Protection_Act_Study_Regions_-_R7_-_CDFW_[ds3178].shp")) |> 
  clean_names() |> 
  st_transform(crs = 32610) |> 
  st_make_valid() |> 
  filter(study_regi == "CCSR") |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry()

scsr_boundary <- sf::st_read(file.path(sr_boundary.dir, "Marine_Life_Protection_Act_Study_Regions_-_R7_-_CDFW_[ds3178].shp")) |> 
  clean_names() |> 
  st_transform(crs = 32610) |> 
  st_make_valid() |> 
  filter(study_regi == "SCSR") |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000)) |> 
  st_drop_geometry()

```










# Function to calculate Absolute Abundance of Depths in all California Regions WITHIN MPAS

```{r}
summarize_region_depths <- function(region_prefix) {
  mpas_data <- get(paste0(region_prefix, "_mpas"))
  depths_data <- get(paste0(region_prefix, "_depths_simple"))
  
  total_ha_mpas <- sum(mpas_data$area_ha, na.rm = TRUE)
  
  zone_areas_absolute <- depths_data |> 
    group_by(pmep_zone_detail) |> 
    summarize(total_area_per_zone_absolute = sum(area_ha, na.rm = TRUE), .groups = "drop") |> 
    mutate(percent_of_total_absolute = (total_area_per_zone_absolute / total_ha_mpas) * 100,
           Region = toupper(region_prefix), # Add region name 
           Designation = "Within MPAs")  

}

# Apply function and combine all results
region_prefixes <- c("ncsr", "nccsr", "ccsr", "scsr")
depth_table_mpas <- bind_rows(lapply(region_prefixes, summarize_region_depths))  |> 
  mutate(
    total_area_per_zone_absolute = round(total_area_per_zone_absolute, 3),
    percent_of_total_absolute = round(percent_of_total_absolute, 3)) |> 
  rename("Habitat Component" = "pmep_zone_detail", 
         "Total Area (ha)" = "total_area_per_zone_absolute",
         "Percentage (%)" = "percent_of_total_absolute")

# Print as a kable table
depth_table_mpas_styled <- kable(depth_table_mpas, format = "html", digits = 3, col.names = c("Habitat Component", "Total Area (ha)", "Percentage (%)", "Region", "Designation")) |> 
  kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "bordered")) |> 
  row_spec(0, bold = TRUE, background = "#f8f9fa", color = "black") |>  # Set header row color
  column_spec(1, color = "black") |>  # Zone column text color
  column_spec(2, width = "120px", color = "black") |>  # Total Area column text color
  column_spec(3, background = "#f0f0f0", color = "black") |>  # Percentage column text color
  column_spec(4, color = "black") |>  # Region column text color
  column_spec(5, color = "black")

depth_table_mpas_styled
```


# Function to calculate Absolute Abundance of Substrate in All California Study Regions WITHIN MPAS

```{r}
summarize_region_substrate <- function(region_prefix) {
  mpas_data <- get(paste0(region_prefix, "_mpas"))
  substrate_data <- get(paste0(region_prefix, "_substrate_simple"))
  
  total_ha_mpas <- sum(mpas_data$area_ha, na.rm = TRUE)
  
  substrate_areas_absolute <- substrate_data |> 
    group_by(cmecs_sc_category) |> 
    summarize(total_area_per_substrate_absolute = sum(area_ha, na.rm = TRUE), .groups = "drop") |> 
    mutate(percent_of_total_substrate_absolute = (total_area_per_substrate_absolute / total_ha_mpas) * 100,
           Region = toupper(region_prefix), # Add region name 
           Designation = "Within MPAs")  

}

# Apply function and combine all results
region_prefixes <- c("ncsr", "nccsr", "ccsr", "scsr")
substrate_table_mpas <- bind_rows(lapply(region_prefixes, summarize_region_substrate)) |> 
  mutate(
    total_area_per_substrate_absolute = round(total_area_per_substrate_absolute, 3),
    percent_of_total_substrate_absolute = round(percent_of_total_substrate_absolute, 3)) |> 
  rename("Habitat Component" = "cmecs_sc_category", 
         "Total Area (ha)" = "total_area_per_substrate_absolute",
         "Percentage (%)" = "percent_of_total_substrate_absolute")

# Print as a kable table
substrate_table_mpas_styled <- kable(substrate_table_mpas, format = "html", digits = 3, col.names = c("Habitat Component", "Total Area (ha)", "Percentage (%)", "Region", "Designation")) |> 
  kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "bordered")) |> 
  row_spec(0, bold = TRUE, background = "#f8f9fa", color = "black") |>  # Set header row color
  column_spec(1, color = "black") |>  # Zone column text color
  column_spec(2, width = "120px", color = "black") |>  # Total Area column text color
  column_spec(3, background = "#f0f0f0", color = "black") |>  # Percentage column text color
  column_spec(4, color = "black") |>  # Region column text color
  column_spec(5, color = "black")

substrate_table_mpas_styled
```



# Function to Calculate Absolute Abundance of Biota in all California Study Regions WITHIN MPAS

```{r}
summarize_region_biota <- function(region_prefix) {
  mpas_data <- get(paste0(region_prefix, "_mpas"))
  biota_data <- get(paste0(region_prefix, "_biota_simple"))
  
  total_ha_mpas <- sum(mpas_data$area_ha, na.rm = TRUE)
  
  biota_areas_absolute <- biota_data |> 
    group_by(cmecs_bc_category) |> 
    summarize(total_area_per_biota_absolute = sum(area_ha, na.rm = TRUE), .groups = "drop") |> 
    mutate(percent_of_total_absolute = (total_area_per_biota_absolute / total_ha_mpas) * 100,
           Region = toupper(region_prefix), # Add region name 
           Designation = "Within MPAs")  

}

# Apply function and combine all results
region_prefixes <- c("ncsr", "nccsr", "ccsr", "scsr")
biota_table_mpas <- bind_rows(lapply(region_prefixes, summarize_region_biota)) |> 
  mutate(
    total_area_per_biota_absolute = round(total_area_per_biota_absolute, 3),
    percent_of_total_absolute = round(percent_of_total_absolute, 3)) |> 
  rename("Habitat Component" = "cmecs_bc_category", 
         "Total Area (ha)" = "total_area_per_biota_absolute",
         "Percentage (%)" = "percent_of_total_absolute")

# Print as a kable table
biota_table_mpas_styled <- kable(biota_table_mpas, format = "html", digits = 3, col.names = c("Habitat Component", "Total Area (ha)", "Percentage (%)", "Region", "Designation")) |> 
  kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "bordered")) |> 
  row_spec(0, bold = TRUE, background = "#f8f9fa", color = "black") |>  # Set header row color
  column_spec(1, color = "black") |>  # Zone column text color
  column_spec(2, width = "120px", color = "black") |>  # Total Area column text color
  column_spec(3, background = "#f0f0f0", color = "black") |>  # Percentage column text color
  column_spec(4, color = "black") |>  # Region column text color
  column_spec(5, color = "black")

biota_table_mpas_styled
```



# Function to calculate Absolute Abundance of Depths in all California Regions IN ALL STATE WATERS

```{r}
summarize_fullregion_depths <- function(region_prefix) {
  fullregion_data <- get(paste0(region_prefix, "_boundary"))
  depths_fullregion_data <- get(paste0(region_prefix, "_depths_fullregion_simple"))
  
  total_ha_fullregion <- sum(fullregion_data$area_ha, na.rm = TRUE)
  
  zone_areas_absolute_fullregion <- depths_fullregion_data |> 
    group_by(pmep_zone_detail) |> 
    summarize(total_area_per_zone_absolute = sum(area_ha, na.rm = TRUE), .groups = "drop") |> 
    mutate(percent_of_total_absolute = (total_area_per_zone_absolute / total_ha_fullregion) * 100,
           Region = toupper(region_prefix), # Add region name 
           Designation = "In All State Waters")  
}

# Apply function and combine all results
region_prefixes <- c("ncsr", "nccsr", "ccsr", "scsr")
depth_table_fullregion <- bind_rows(lapply(region_prefixes, summarize_fullregion_depths)) |> 
  mutate(
    total_area_per_zone_absolute = round(total_area_per_zone_absolute, 3),
    percent_of_total_absolute = round(percent_of_total_absolute, 3)) |> 
  rename("Habitat Component" = "pmep_zone_detail", 
         "Total Area (ha)" = "total_area_per_zone_absolute",
         "Percentage (%)" = "percent_of_total_absolute")

# Print as a kable table
depth_table_fullregion_styled <- kable(depth_table_fullregion, format = "html", digits = 3, col.names = c("Habitat Component", "Total Area (ha)", "Percentage (%)", "Region", "Designation")) |> 
  kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "bordered")) |> 
  row_spec(0, bold = TRUE, background = "#f8f9fa", color = "black") |>  # Set header row color
  column_spec(1, color = "black") |>  # Zone column text color
  column_spec(2, width = "120px", color = "black") |>  # Total Area column text color
  column_spec(3, background = "#f0f0f0", color = "black") |>  # Percentage column text color
  column_spec(4, color = "black") |>  # Region column text color
  column_spec(5, color = "black")

depth_table_fullregion_styled
```



# Function to calculate absolute abundances of substrates IN ALL STATE WATERS

```{r}
summarize_fullregion_substrate <- function(region_prefix) {
  fullregion_data <- get(paste0(region_prefix, "_boundary"))
  substrate_fullregion_data <- get(paste0(region_prefix, "_substrate_fullregion_simple"))
  
  total_ha_fullregion <- sum(fullregion_data$area_ha, na.rm = TRUE)
  
  substrate_areas_absolute_fullregion <- substrate_fullregion_data |> 
    group_by(cmecs_sc_category) |> 
    summarize(total_area_per_substrate_absolute = sum(area_ha, na.rm = TRUE), .groups = "drop") |> 
    mutate(percent_of_total_substrate_absolute = (total_area_per_substrate_absolute / total_ha_fullregion) * 100,
           Region = toupper(region_prefix), # Add region name 
           Designation = "In All State Waters")  

}

# Apply function and combine all results
region_prefixes <- c("ncsr", "nccsr", "ccsr", "scsr")
substrate_table_fullregion <- bind_rows(lapply(region_prefixes, summarize_fullregion_substrate)) |> 
  mutate(
    total_area_per_substrate_absolute = round(total_area_per_substrate_absolute, 3),
    percent_of_total_substrate_absolute = round(percent_of_total_substrate_absolute, 3)) |> 
  rename("Habitat Component" = "cmecs_sc_category", 
         "Total Area (ha)" = "total_area_per_substrate_absolute",
         "Percentage (%)" = "percent_of_total_substrate_absolute")

# Print as a kable table
substrate_table_fullregion_styled <- kable(substrate_table_fullregion, format = "html", digits = 3, col.names = c("Habitat Component", "Total Area (ha)", "Percentage (%)", "Region", "Designation")) |> 
  kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "bordered")) |> 
  row_spec(0, bold = TRUE, background = "#f8f9fa", color = "black") |>  # Set header row color
  column_spec(1, color = "black") |>  # Zone column text color
  column_spec(2, width = "120px", color = "black") |>  # Total Area column text color
  column_spec(3, background = "#f0f0f0", color = "black") |>  # Percentage column text color
  column_spec(4, color = "black") |>  # Region column text color
  column_spec(5, color = "black")

substrate_table_fullregion_styled
```



# Function to calculate absolute abundances of biota IN ALL STATE WATERS

```{r}
summarize_fullregion_biota <- function(region_prefix) {
  fullregion_data <- get(paste0(region_prefix, "_boundary"))
  biota_fullregion_data <- get(paste0(region_prefix, "_biota_fullregion_simple"))
  
  total_ha_fullregion <- sum(fullregion_data$area_ha, na.rm = TRUE)
  
  biota_areas_absolute_fullregion <- biota_fullregion_data |> 
    group_by(cmecs_bc_category) |> 
    summarize(total_area_per_biota_absolute = sum(area_ha, na.rm = TRUE), .groups = "drop") |> 
    mutate(percent_of_total_biota_absolute = (total_area_per_biota_absolute / total_ha_fullregion) * 100,
           Region = toupper(region_prefix), # Add region name 
           Designation = "In All State Waters")  
  
}

# Apply function and combine all results
region_prefixes <- c("ncsr", "nccsr", "ccsr", "scsr")
biota_table_fullregion <- bind_rows(lapply(region_prefixes, summarize_fullregion_biota)) |> 
  mutate(
    total_area_per_biota_absolute = round(total_area_per_biota_absolute, 3),
    percent_of_total_biota_absolute = round(percent_of_total_biota_absolute, 3)) |> 
  rename("Habitat Component" = "cmecs_bc_category", 
         "Total Area (ha)" = "total_area_per_biota_absolute",
         "Percentage (%)" = "percent_of_total_biota_absolute")

# Print as a kable table
biota_table_fullregion_styled <- kable(biota_table_fullregion, format = "html", digits = 3, col.names = c("Habitat Component", "Total Area (ha)", "Percentage (%)", "Region", "Designation")) |> 
  kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "bordered")) |> 
  row_spec(0, bold = TRUE, background = "#f8f9fa", color = "black") |>  # Set header row color
  column_spec(1, color = "black") |>  # Zone column text color
  column_spec(2, width = "120px", color = "black") |>  # Total Area column text color
  column_spec(3, background = "#f0f0f0", color = "black") |>  # Percentage column text color
  column_spec(4, color = "black") |>  # Region column text color
  column_spec(5, color = "black")

biota_table_fullregion_styled
```



# Bind all output tables together and export as a csv

```{r}
# Create list of all tables to bind
table_list <- list(depth_table_mpas, depth_table_fullregion, substrate_table_mpas, substrate_table_fullregion, biota_table_mpas, biota_table_fullregion)

# Bind table list together
absolute_abundances <- bind_rows(table_list)

# Write it as a csv
write_csv(absolute_abundances, file = "mbm_absolute_abundances.csv")
```




























